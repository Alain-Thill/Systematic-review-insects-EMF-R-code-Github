odds_exp$`Number of experiments` <- 0
odds_exp$`Effect` <- 0
odds_exp$`No Effect` <- 0
nrow(subset(HF, Direction_of_effect == "detrimental"))
nrow(HF[grep("detrimental", HF$Direction_of_effect),]) # 35 detrimental
HF <- df[grep("HF", df$EMF_type),]
LF <- df[grep("LF", df$EMF_type),]
table(df$Direction_of_effect)
table(df$Exp_Effect)
`EMF type` <- c("All","LF","LF","LF","HF","HF","HF","HF","HF","HF","HF","Base station","DECT","Helmholtz coil","Mobile phone","Power line","Signal generator")
`E-field strength` <- c("All","All","All","All","All","All","All","< 41 V/m","< 6 V/m","< 6 V/m","< 6 V/m",
"All","All","All","All","All","All")
`Insect` <- c("All","All","Drosophila","Honeybee","All","Drosophila","Honeybee","All","All","Drosophila","Honeybee","All","All","All","All","All","All")
odds_exp <- tibble(`EMF type`,`E-field strength`,`Insect`)
odds_exp
odds_exp$`Number of experiments` <- 0
odds_exp$`Effect` <- 0
odds_exp$`No Effect` <- 0
nrow(subset(HF, Direction_of_effect == "detrimental"))
nrow(HF[grep("detrimental", HF$Direction_of_effect),]) # 35 detrimental
# All
nrow(df)
nrow(sqldf("SELECT * FROM df WHERE Exp_Effect = 'Effect'"))
nrow(sqldf("SELECT * FROM df WHERE Exp_Effect = 'No effect'"))
pacman::p_load(dplyr, tidyr, gdata, ggplot2, ggpubr, scales, RColorBrewer, openxlsx, sqldf, data.table)
df <- openxlsx::read.xlsx("tables/HFLF_meta_table.xlsx", sheet = 1, na.strings = "NA")
names(df)
HF <- df[grep("HF", df$type),]
LF <- df[grep("LF", df$type),]
names(HF)
df_start <- df[c("study","Title","Effect","EMF_type")]
df_start <- na.omit(df_start)
df_EMF <- unique(df[c("study","EMF_source")])
df_EMF <- aggregate(EMF_source ~ study, df_EMF, paste, collapse=", ")
df_EMF
df_insect <- unique(df[c("study","Insect_type")])
df_insect <- aggregate(Insect_type ~ study, df_insect, paste, collapse=", ")
df_insect
df_Efield <- unique(df[c("study","E_Field")])
df_Efield <- arrange_all(df_Efield)
df_Efield <- aggregate(E_Field ~ study, df_Efield, paste, collapse=", ")
min_Efield <- df_Efield %>% mutate(E_Field = strsplit(E_Field, ", "))
min_Efield$min_E <- lapply(min_Efield$E_Field, `[[`, 1)
min_Efield$min_E <- as.numeric(min_Efield$min_E)
min_Efield <- min_Efield[,c(1,3)]
names(min_Efield) <- c("study","min_E_Field")
str(min_Efield)
df_bioeffects <- unique(df[c("study","Bioeffect_cat")])
df_bioeffects <- aggregate(Bioeffect_cat ~ study, df_bioeffects, paste, collapse=", ")
#View(df_bioeffects)
df_direct_effect <- unique(df[c("study","Direction_of_effect")])
df_direct_effect <- aggregate(Direction_of_effect ~ study, df_direct_effect, paste, collapse=", ")
df_merge <- full_join(df_start, df_EMF, by = c("study"), copy=T)
df_merge <- full_join(df_merge, df_insect, by = c("study"), copy=T)
df_merge <- full_join(df_merge, min_Efield, by = c("study"), copy=T)
df_merge <- full_join(df_merge, df_bioeffects, by = c("study"), copy=T)
df_merge <- full_join(df_merge, df_direct_effect, by = c("study"), copy=T)
df_merge <- df_merge %>% mutate_at("Direction_of_effect", ~replace_na(.,"none"))
str(df_merge)
View(df_merge)
pacman::p_load(dplyr, tidyr, sqldf, scales, Hmisc, poolr, gridExtra)
df <- openxlsx::read.xlsx("tables/HFLF_meta_table.xlsx", sheet = 1, na.strings = "NA")
df$Exp_Effect <- "" # adding "effect" variable for all experiments within studies
df$Exp_Effect <- as.character(df$Exp_Effect)
df <- mutate(df, Exp_Effect = if_else ( Direction_of_effect== 'detrimental', "Effect", Exp_Effect)) # If harmful, classify as "Effect"
df <- mutate(df, Exp_Effect = if_else ( Direction_of_effect== 'beneficial', "No effect", Exp_Effect)) # If positive effect, classify as "no effect"
df <- mutate(df, Exp_Effect = if_else ( Direction_of_effect== 'none', "No effect", Exp_Effect)) # If no effect, classify as "No effect"
df <- mutate(df, Exp_Effect = if_else ( Direction_of_effect== 'uncertain', "Unknown", Exp_Effect)) # If uncertain effect, classify as "NA", for removal
df$Exp_Effect[grep("Unknown", df$Exp_Effect)] <- NA
df <- df[complete.cases(df[,"Exp_Effect"]),]
HF <- df[grep("HF", df$EMF_type),]
LF <- df[grep("LF", df$EMF_type),]
table(df$Direction_of_effect)
table(df$Exp_Effect)
`EMF type` <- c("All","LF","LF","LF","HF","HF","HF","HF","HF","HF","HF","Base station","DECT","Helmholtz coil","Mobile phone","Power line","Signal generator")
`E-field strength` <- c("All","All","All","All","All","All","All","< 41 V/m","< 6 V/m","< 6 V/m","< 6 V/m",
"All","All","All","All","All","All")
`Insect` <- c("All","All","Drosophila","Honeybee","All","Drosophila","Honeybee","All","All","Drosophila","Honeybee","All","All","All","All","All","All")
odds_exp <- tibble(`EMF type`,`E-field strength`,`Insect`)
odds_exp
odds_exp$`Number of experiments` <- 0
odds_exp$`Effect` <- 0
odds_exp$`No Effect` <- 0
nrow(subset(HF, Direction_of_effect == "detrimental"))
nrow(HF[grep("detrimental", HF$Direction_of_effect),]) # 35 detrimental
# All
nrow(df)
nrow(sqldf("SELECT * FROM df WHERE Exp_Effect = 'Effect'"))
nrow(sqldf("SELECT * FROM df WHERE Exp_Effect = 'No effect'"))
odds_exp$`Number of experiments`[1] <- nrow(df)
odds_exp$`Effect`[1] <- nrow(sqldf("SELECT * FROM df WHERE Exp_Effect = 'Effect'"))
odds_exp$`No Effect`[1] <- nrow(sqldf("SELECT * FROM df WHERE Exp_Effect = 'No effect'"))
# LF
nrow(sqldf("SELECT * FROM LF WHERE Exp_Effect = 'Effect'"))
nrow(sqldf("SELECT * FROM LF WHERE Exp_Effect = 'No effect'"))
odds_exp$`Number of experiments`[2] <- nrow(LF)
odds_exp$`Effect`[2] <- nrow(sqldf("SELECT * FROM LF WHERE Exp_Effect = 'Effect'"))
odds_exp$`No Effect`[2] <- nrow(sqldf("SELECT * FROM LF WHERE Exp_Effect = 'No effect'"))
drosophila <- sqldf("SELECT * FROM LF WHERE CellsAnimal = 'Drosophila'")
nrow(drosophila)
nrow(sqldf("SELECT * FROM drosophila WHERE Exp_Effect = 'Effect'"))
nrow(sqldf("SELECT * FROM drosophila WHERE Exp_Effect = 'No effect'"))
odds_exp$`Number of experiments`[3] <- nrow(drosophila)
odds_exp$`Effect`[3] <- nrow(sqldf("SELECT * FROM drosophila WHERE Exp_Effect = 'Effect'"))
odds_exp$`No Effect`[3] <- nrow(sqldf("SELECT * FROM drosophila WHERE Exp_Effect = 'No effect'"))
bees <- sqldf("SELECT * FROM LF WHERE CellsAnimal = 'Honeybee'")
nrow(bees)
nrow(sqldf("SELECT * FROM bees WHERE Exp_Effect = 'Effect'"))
nrow(sqldf("SELECT * FROM bees WHERE Exp_Effect = 'No effect'"))
odds_exp$`Number of experiments`[4] <- nrow(bees)
odds_exp$`Effect`[4] <- nrow(sqldf("SELECT * FROM bees WHERE Exp_Effect = 'Effect'"))
odds_exp$`No Effect`[4] <- nrow(sqldf("SELECT * FROM bees WHERE Exp_Effect = 'No effect'"))
# HF
nrow(sqldf("SELECT * FROM HF WHERE Exp_Effect = 'Effect'"))  # 133 Effect found
nrow(sqldf("SELECT * FROM HF WHERE Exp_Effect = 'No effect'"))  # 45 No effect found
odds_exp$`Number of experiments`[5] <- nrow(HF)
odds_exp$`Effect`[5] <- nrow(sqldf("SELECT * FROM HF WHERE Exp_Effect = 'Effect'"))
odds_exp$`No Effect`[5] <- nrow(sqldf("SELECT * FROM HF WHERE Exp_Effect = 'No effect'"))
drosophila <- sqldf("SELECT * FROM HF WHERE CellsAnimal = 'Drosophila'")
nrow(drosophila) # 124
nrow(sqldf("SELECT * FROM drosophila WHERE Exp_Effect = 'Effect'")) # 116
nrow(sqldf("SELECT * FROM drosophila WHERE Exp_Effect = 'No effect'")) # 8
odds_exp$`Number of experiments`[6] <- nrow(drosophila)
odds_exp$`Effect`[6] <- nrow(sqldf("SELECT * FROM drosophila WHERE Exp_Effect = 'Effect'"))
odds_exp$`No Effect`[6] <- nrow(sqldf("SELECT * FROM drosophila WHERE Exp_Effect = 'No effect'"))
drosophila %>%
group_by(SignalGen) %>%
filter(n() > 1) %>%
summarise(across(where(is.numeric), ~ median(.x, na.rm = TRUE)), n = n())
drosophila <- sqldf("SELECT * FROM HF WHERE Insect_type = 'Drosophila'")
nrow(drosophila) # 124
nrow(sqldf("SELECT * FROM drosophila WHERE Exp_Effect = 'Effect'")) # 116
nrow(sqldf("SELECT * FROM drosophila WHERE Exp_Effect = 'No effect'")) # 8
odds_exp$`Number of experiments`[6] <- nrow(drosophila)
odds_exp$`Effect`[6] <- nrow(sqldf("SELECT * FROM drosophila WHERE Exp_Effect = 'Effect'"))
odds_exp$`No Effect`[6] <- nrow(sqldf("SELECT * FROM drosophila WHERE Exp_Effect = 'No effect'"))
drosophila %>%
group_by(SignalGen) %>%
filter(n() > 1) %>%
summarise(across(where(is.numeric), ~ median(.x, na.rm = TRUE)), n = n())
bees <- sqldf("SELECT * FROM LF WHERE CellsAnimal = 'Honeybee'")
nrow(bees)
drosophila <- sqldf("SELECT * FROM LF WHERE Insect_type = 'Drosophila'")
nrow(drosophila)
nrow(sqldf("SELECT * FROM drosophila WHERE Exp_Effect = 'Effect'"))
nrow(sqldf("SELECT * FROM drosophila WHERE Exp_Effect = 'No effect'"))
odds_exp$`Number of experiments`[3] <- nrow(drosophila)
odds_exp$`Effect`[3] <- nrow(sqldf("SELECT * FROM drosophila WHERE Exp_Effect = 'Effect'"))
odds_exp$`No Effect`[3] <- nrow(sqldf("SELECT * FROM drosophila WHERE Exp_Effect = 'No effect'"))
bees <- sqldf("SELECT * FROM LF WHERE Insect_type = 'Honeybee'")
nrow(bees)
nrow(sqldf("SELECT * FROM bees WHERE Exp_Effect = 'Effect'"))
nrow(sqldf("SELECT * FROM bees WHERE Exp_Effect = 'No effect'"))
odds_exp$`Number of experiments`[4] <- nrow(bees)
odds_exp$`Effect`[4] <- nrow(sqldf("SELECT * FROM bees WHERE Exp_Effect = 'Effect'"))
odds_exp$`No Effect`[4] <- nrow(sqldf("SELECT * FROM bees WHERE Exp_Effect = 'No effect'"))
# HF
nrow(sqldf("SELECT * FROM HF WHERE Exp_Effect = 'Effect'"))  # 133 Effect found
nrow(sqldf("SELECT * FROM HF WHERE Exp_Effect = 'No effect'"))  # 45 No effect found
odds_exp$`Number of experiments`[5] <- nrow(HF)
odds_exp$`Effect`[5] <- nrow(sqldf("SELECT * FROM HF WHERE Exp_Effect = 'Effect'"))
odds_exp$`No Effect`[5] <- nrow(sqldf("SELECT * FROM HF WHERE Exp_Effect = 'No effect'"))
drosophila <- sqldf("SELECT * FROM HF WHERE Insect_type = 'Drosophila'")
nrow(drosophila) # 124
nrow(sqldf("SELECT * FROM drosophila WHERE Exp_Effect = 'Effect'")) # 116
nrow(sqldf("SELECT * FROM drosophila WHERE Exp_Effect = 'No effect'")) # 8
odds_exp$`Number of experiments`[6] <- nrow(drosophila)
odds_exp$`Effect`[6] <- nrow(sqldf("SELECT * FROM drosophila WHERE Exp_Effect = 'Effect'"))
odds_exp$`No Effect`[6] <- nrow(sqldf("SELECT * FROM drosophila WHERE Exp_Effect = 'No effect'"))
drosophila %>%
group_by(SignalGen) %>%
filter(n() > 1) %>%
summarise(across(where(is.numeric), ~ median(.x, na.rm = TRUE)), n = n())
bees <- sqldf("SELECT * FROM HF WHERE Insect_type = 'Honeybee'")
nrow(bees) # 43
nrow(sqldf("SELECT * FROM bees WHERE Exp_Effect = 'Effect'")) # 12
nrow(sqldf("SELECT * FROM bees WHERE Exp_Effect = 'No effect'")) # 31
odds_exp$`Number of experiments`[7] <- nrow(bees)
odds_exp$`Effect`[7] <- nrow(sqldf("SELECT * FROM bees WHERE Exp_Effect = 'Effect'"))
odds_exp$`No Effect`[7] <- nrow(sqldf("SELECT * FROM bees WHERE Exp_Effect = 'No effect'"))
#View(bees)
nrow(sqldf("SELECT * FROM bees WHERE EMF_type = 'Base station'"))
icnirp <- sqldf("SELECT * FROM HF WHERE E_Field <= 41")
#View(icnirp)
nrow(icnirp) # 167
nrow(sqldf("SELECT * FROM icnirp WHERE Exp_Effect = 'Effect'")) #126
nrow(sqldf("SELECT * FROM icnirp WHERE Exp_Effect = 'No effect'")) #41
odds_exp$`Number of experiments`[8] <- nrow(icnirp)
odds_exp$`Effect`[8] <- nrow(sqldf("SELECT * FROM icnirp WHERE Exp_Effect = 'Effect'"))
odds_exp$`No Effect`[8] <- nrow(sqldf("SELECT * FROM icnirp WHERE Exp_Effect = 'No effect'"))
count <- sqldf("SELECT * FROM HF WHERE E_Field <= 6")
#View(count)
odds_exp$`Number of experiments`[9] <- nrow(count)
odds_exp$`Effect`[9] <- nrow(sqldf("SELECT * FROM count WHERE Exp_Effect = 'Effect'"))
odds_exp$`No Effect`[9] <- nrow(sqldf("SELECT * FROM count WHERE Exp_Effect = 'No effect'"))
drosophila <- sqldf("SELECT * FROM count WHERE Insect_type = 'Drosophila'")
odds_exp$`Number of experiments`[10] <- nrow(drosophila)
odds_exp$`Effect`[10] <- nrow(sqldf("SELECT * FROM drosophila WHERE Exp_Effect = 'Effect'"))
odds_exp$`No Effect`[10] <- nrow(sqldf("SELECT * FROM drosophila WHERE Exp_Effect = 'No effect'"))
bees <- sqldf("SELECT * FROM count WHERE Insect_type = 'Honeybee'")
odds_exp$`Number of experiments`[11] <- nrow(bees)
odds_exp$`Effect`[11] <- nrow(sqldf("SELECT * FROM bees WHERE Exp_Effect = 'Effect'"))
odds_exp$`No Effect`[11] <- nrow(sqldf("SELECT * FROM bees WHERE Exp_Effect = 'No effect'"))
base <- sqldf("SELECT * FROM HF WHERE EMF_type = 'Base station'")
#View(base)
nrow(base) # 34
nrow(sqldf("SELECT * FROM base WHERE Exp_Effect = 'Effect'")) # 3
nrow(sqldf("SELECT * FROM base WHERE Exp_Effect = 'No effect'")) # 14
odds_exp$`Number of experiments`[12] <- nrow(base)
odds_exp$`Effect`[12] <- nrow(sqldf("SELECT * FROM base WHERE Exp_Effect = 'Effect'"))
odds_exp$`No Effect`[12] <- nrow(sqldf("SELECT * FROM base WHERE Exp_Effect = 'No effect'"))
DECT <- sqldf("SELECT * FROM df WHERE EMF_type = 'DECT'")
odds_exp$`Number of experiments`[13] <- nrow(DECT)
odds_exp$`Effect`[13] <- nrow(sqldf("SELECT * FROM DECT WHERE Exp_Effect = 'Effect'"))
odds_exp$`No Effect`[13] <- nrow(sqldf("SELECT * FROM DECT WHERE Exp_Effect = 'No effect'"))
helmholtz <- sqldf("SELECT * FROM df WHERE EMF_type = 'Helmholtz coil 50/60 Hz'")
nrow(helmholtz) # 93
nrow(sqldf("SELECT * FROM helmholtz WHERE Exp_Effect = 'Effect'")) # 25
nrow(sqldf("SELECT * FROM helmholtz WHERE Exp_Effect = 'No effect'")) # 15
odds_exp$`Number of experiments`[14] <- nrow(helmholtz)
odds_exp$`Effect`[14] <- nrow(sqldf("SELECT * FROM helmholtz WHERE Exp_Effect = 'Effect'"))
odds_exp$`No Effect`[14] <- nrow(sqldf("SELECT * FROM helmholtz WHERE Exp_Effect = 'No effect'"))
helmholtz <- sqldf("SELECT * FROM df WHERE EMF_type = 'Coil system 50/60 Hz'")
nrow(helmholtz) # 93
#View(odds_exp)
table(df$EMF_source)
base <- sqldf("SELECT * FROM HF WHERE EMF_source = 'Base station'")
#View(base)
nrow(base) # 34
nrow(sqldf("SELECT * FROM base WHERE Exp_Effect = 'Effect'")) # 3
nrow(sqldf("SELECT * FROM base WHERE Exp_Effect = 'No effect'")) # 14
odds_exp$`Number of experiments`[12] <- nrow(base)
odds_exp$`Effect`[12] <- nrow(sqldf("SELECT * FROM base WHERE Exp_Effect = 'Effect'"))
odds_exp$`No Effect`[12] <- nrow(sqldf("SELECT * FROM base WHERE Exp_Effect = 'No effect'"))
DECT <- sqldf("SELECT * FROM df WHERE EMF_source = 'DECT'")
odds_exp$`Number of experiments`[13] <- nrow(DECT)
odds_exp$`Effect`[13] <- nrow(sqldf("SELECT * FROM DECT WHERE Exp_Effect = 'Effect'"))
odds_exp$`No Effect`[13] <- nrow(sqldf("SELECT * FROM DECT WHERE Exp_Effect = 'No effect'"))
helmholtz <- sqldf("SELECT * FROM df WHERE EMF_source = 'Coil system 50/60 Hz'")
nrow(helmholtz) # 93
nrow(sqldf("SELECT * FROM helmholtz WHERE Exp_Effect = 'Effect'")) # 25
nrow(sqldf("SELECT * FROM helmholtz WHERE Exp_Effect = 'No effect'")) # 15
odds_exp$`Number of experiments`[14] <- nrow(helmholtz)
odds_exp$`Effect`[14] <- nrow(sqldf("SELECT * FROM helmholtz WHERE Exp_Effect = 'Effect'"))
odds_exp$`No Effect`[14] <- nrow(sqldf("SELECT * FROM helmholtz WHERE Exp_Effect = 'No effect'"))
mobile <- sqldf("SELECT * FROM df WHERE EMF_source = 'Mobile phone'")
nrow(mobile) # 107
nrow(sqldf("SELECT * FROM mobile WHERE Exp_Effect = 'Effect'")) # 50
nrow(sqldf("SELECT * FROM mobile WHERE Exp_Effect = 'No effect'")) # 8
odds_exp$`Number of experiments`[15] <- nrow(mobile)
odds_exp$`Effect`[15] <- nrow(sqldf("SELECT * FROM mobile WHERE Exp_Effect = 'Effect'"))
odds_exp$`No Effect`[15] <- nrow(sqldf("SELECT * FROM mobile WHERE Exp_Effect = 'No effect'"))
power <- sqldf("SELECT * FROM df WHERE EMF_source = 'Power line'")
odds_exp$`Number of experiments`[16] <- nrow(power)
odds_exp$`Effect`[16] <- nrow(sqldf("SELECT * FROM power WHERE Exp_Effect = 'Effect'"))
odds_exp$`No Effect`[16] <- nrow(sqldf("SELECT * FROM power WHERE Exp_Effect = 'No effect'"))
siggen <- sqldf("SELECT * FROM df WHERE EMF_source = 'RF Signal Generator'")
nrow(siggen) # 68
nrow(sqldf("SELECT * FROM siggen WHERE Exp_Effect = 'Effect'")) # 27
nrow(sqldf("SELECT * FROM siggen WHERE Exp_Effect = 'No effect'")) # 11
odds_exp$`Number of experiments`[17] <- nrow(siggen)
odds_exp$`Effect`[17] <- nrow(sqldf("SELECT * FROM siggen WHERE Exp_Effect = 'Effect'"))
odds_exp$`No Effect`[17] <- nrow(sqldf("SELECT * FROM siggen WHERE Exp_Effect = 'No effect'"))
View(odds_exp)
#View(odds_exp)
table(df$EMF_source)
siggen <- sqldf("SELECT * FROM df WHERE EMF_source = 'RF signal generator'")
nrow(siggen) # 68
nrow(sqldf("SELECT * FROM siggen WHERE Exp_Effect = 'Effect'")) # 27
nrow(sqldf("SELECT * FROM siggen WHERE Exp_Effect = 'No effect'")) # 11
odds_exp$`Number of experiments`[17] <- nrow(siggen)
odds_exp$`Effect`[17] <- nrow(sqldf("SELECT * FROM siggen WHERE Exp_Effect = 'Effect'"))
odds_exp$`No Effect`[17] <- nrow(sqldf("SELECT * FROM siggen WHERE Exp_Effect = 'No effect'"))
View(odds_exp)
openxlsx::write.xlsx(odds_exp, "tables/coin_toss_odds_exp.xlsx", rowNames = F, overwrite = T)
df <- openxlsx::read.xlsx("tables/coin_toss_odds_exp.xlsx", sheet = 1, na.strings = "NA")
#View(df)
df$Number.of.experiments <- df$No.Effect+df$Effect
names(df)
df$`P-value` <- dbinom(df$Effect, df$Number.of.experiments, 0.5)
df$Percent_effect <- percent(round(df$Effect/df$Number.of.experiments, digits = 2))
#calculate 95% confidence interval
confid <- binconf(x=df$Effect, n=df$Number.of.experiments, alpha=.05, include.x=T, include.n=T, return.df = T)
confid$Lower <- round(confid$Lower, digits=2)
confid$Upper <- round(confid$Upper, digits=2)
confid$Lower <- 100*confid$Lower
confid$Upper <- 100*confid$Upper
df$`95% CI` <- paste0(confid$Lower,"--",confid$Upper," %")
names(df) <- c("EMF type", "E-field strength", "Insect", "Experiments (n= )", "Effect", "No effect", "p-value", "Effect (%)", "95% CI")
names(df)
View(df)
drosophila %>%
group_by(EMF_source) %>%
filter(n() > 1) %>%
summarise(across(where(is.numeric), ~ median(.x, na.rm = TRUE)), n = n())
nrow(subset(HF, Direction_of_effect == "detrimental"))
nrow(HF[grep("detrimental", HF$Direction_of_effect),]) # 35 detrimental
df <- openxlsx::read.xlsx("tables/coin_toss_odds_exp.xlsx", sheet = 1, na.strings = "NA")
df$Number.of.experiments <- df$No.Effect+df$Effect
df$`P-value` <- dbinom(df$Effect, df$Number.of.experiments, 0.5)
df$Percent_effect <- percent(round(df$Effect/df$Number.of.experiments, digits = 2))
#calculate 95% confidence interval
confid <- binconf(x=df$Effect, n=df$Number.of.experiments, alpha=.05, include.x=T, include.n=T, return.df = T)
confid$Lower <- round(confid$Lower, digits=2)
confid$Upper <- round(confid$Upper, digits=2)
confid$Lower <- 100*confid$Lower
confid$Upper <- 100*confid$Upper
df$`95% CI` <- paste0(confid$Lower,"--",confid$Upper," %")
names(df) <- c("EMF type", "E-field strength", "Insect", "Experiments (n= )", "Effect", "No effect", "p-value", "Effect (%)", "95% CI")
View(df)
options(digits = 4)
options(scipen = 999)
df$`p-value`
df$`p-value` <- round(df$`p-value`, digits=4)
df$`p-value` <- as.character(df$`p-value`)
df <- mutate(df, `p-value` = if_else ( `p-value` < 0.0001, "< 0.0001", `p-value`))
View(df)
df <- openxlsx::read.xlsx("tables/HFLF_meta_table.xlsx", sheet = 1, na.strings = "NA")
str(df$Confid)
df <- openxlsx::read.xlsx("tables/HFLF_meta_table.xlsx", sheet = 1, na.strings = "NA")
# compute one-sided p-values
df$one.sided.p <- df$p/2
# For Fisher's composite p-value, adjusting one-sided p-value depending on direction of effect
df <- mutate(df, one.sided.p = if_else (Direction_of_effect == "detrimental" & one.sided.p > 0.5, 1-one.sided.p, one.sided.p))
df <- mutate(df, one.sided.p = if_else (Direction_of_effect == "beneficial", 1-one.sided.p, one.sided.p))
df <- mutate(df, one.sided.p = if_else (Direction_of_effect == "beneficial" & one.sided.p < 0.5, 1-one.sided.p, one.sided.p))
df <- mutate(df, one.sided.p = if_else (Direction_of_effect == "none", 0.5, one.sided.p))
df <- df[complete.cases(df[,c("one.sided.p")]),]
View(df)
HF <- df[grep("HF", df$type),]
LF <- df[grep("LF", df$type),]
base <- sqldf("SELECT * FROM df WHERE EMF_source = 'Base station'")
#View(base)
#?fisher
#?stouffer
stouffer(base$one.sided.p)
fisher(base$one.sided.p)
fisher(base$one.sided.p, side = 1) # same
DECT <- sqldf("SELECT * FROM df WHERE EMF_source = 'DECT'")
fisher(DECT$one.sided.p)
stouffer(DECT$one.sided.p)
helmholtz <- sqldf("SELECT * FROM df WHERE EMF_source = 'Helmholtz coil 50/60 Hz'")
helmholtz <- sqldf("SELECT * FROM df WHERE EMF_source = 'Coil system 50/60 Hz'")
stouffer(helmholtz$one.sided.p)
fisher(helmholtz$one.sided.p)
mobile <- sqldf("SELECT * FROM df WHERE EMF_source = 'Mobile phone'")
fisher(mobile$one.sided.p)
stouffer(mobile$one.sided.p)
power <- sqldf("SELECT * FROM df WHERE EMF_source = 'Power line'")
fisher(power$one.sided.p)
#View(base)
?fisher
?stouffer
#View(base)
?fisher
# copy p-values and LD correlation matrix into p and r
# (see help(grid2ip) for details on these data)
p <- grid2ip.p
r <- grid2ip.ld
View(p)
View(r)
base_r <- model.matrix(~ -1 + base$study, data = base)
base_r
fisher(base$one.sided.p, adjust = "empirical", R = base_r)
model.matrix
?model.matrix
res <- rma(yi, vi, mods = ~ study, data=base)
View(base)
res <- rma(yi, vi, mods = ~ study/experiment, data=base)
### extract the model matrix
model.matrix(res)
base_r <- model.matrix(res)
fisher(base$one.sided.p, adjust = "empirical", R = base_r)
fisher(base$one.sided.p, adjust = "empirical")
fisher(base$one.sided.p, side = 1, m=8) # same
fisher(base$one.sided.p, side = 1, m = 3) # same
fisher(base$one.sided.p, side = 1, m = unique(base$study)) # same
unique(base$study)
fisher(base$one.sided.p, side = 1, m = count(unique(base$study))) # same
fisher(base$one.sided.p, side = 1, m = nrow(unique(base$study))) # same
unique(base$study)
uniqueN(base$study)
fisher(base$one.sided.p, side = 1, m = uniqueN(base$study)) # same
fisher(DECT$one.sided.p, m = uniqueN(base$study))
stouffer(DECT$one.sided.p, m = uniqueN(base$study))
stouffer(DECT$one.sided.p, m = uniqueN(DECT$study))
fisher(DECT$one.sided.p, m = uniqueN(DECT$study))
stouffer(base$one.sided.p, m = uniqueN(base$study))
fisher(base$one.sided.p, side = 1, m = uniqueN(base$study)) # same
helmholtz <- sqldf("SELECT * FROM df WHERE EMF_source = 'Coil system 50/60 Hz'")
stouffer(helmholtz$one.sided.p, m = uniqueN(helmholtz$study))
fisher(helmholtz$one.sided.p, m = uniqueN(helmholtz$study))
mobile <- sqldf("SELECT * FROM df WHERE EMF_source = 'Mobile phone'")
stouffer(mobile$one.sided.p, m = uniqueN(mobile$study))
fisher(mobile$one.sided.p, m = uniqueN(mobile$study))
power <- sqldf("SELECT * FROM df WHERE EMF_source = 'Power line'")
fisher(power$one.sided.p, m = uniqueN(power$study))
siggen <- sqldf("SELECT * FROM df WHERE EMF_source = 'RF Signal Generator'")
fisher(siggen$one.sided.p, m = uniqueN(siggen$study))
siggen <- sqldf("SELECT * FROM df WHERE EMF_source = 'RF signal generator'")
fisher(siggen$one.sided.p, m = uniqueN(siggen$study))
drosophila <- sqldf("SELECT * FROM count WHERE Insect_type = 'Drosophila'")
count <- sqldf("SELECT * FROM HF WHERE E_Field <= 6")
drosophila <- sqldf("SELECT * FROM count WHERE Insect_type = 'Drosophila'")
power <- sqldf("SELECT * FROM df WHERE EMF_source = 'Power line'")
stouffer(power$one.sided.p, m = uniqueN(power$study))
fisher(power$one.sided.p, m = uniqueN(power$study))
siggen <- sqldf("SELECT * FROM df WHERE EMF_source = 'RF signal generator'")
fisher(siggen$one.sided.p, m = uniqueN(siggen$study))
fisher(siggen$one.sided.p, m = uniqueN(siggen$study))
count <- sqldf("SELECT * FROM HF WHERE E_Field <= 6")
drosophila <- sqldf("SELECT * FROM count WHERE Insect_type = 'Drosophila'")
stouffer(drosophila$one.sided.p, m = uniqueN(drosophila$study))
count <- sqldf("SELECT * FROM HF WHERE E_Field <= 6")
drosophila <- sqldf("SELECT * FROM count WHERE Insect_type = 'Drosophila'")
stouffer(drosophila$one.sided.p, m = uniqueN(drosophila$study))
count
View(count)
count <- sqldf("SELECT * FROM HF WHERE E_Field <= 41")
View(count)
HF <- df[grep("HF", df$EMF_type),]
LF <- df[grep("LF", df$EMF_type),]
base <- sqldf("SELECT * FROM df WHERE EMF_source = 'Base station'")
uniqueN(base$study)
stouffer(base$one.sided.p, m = uniqueN(base$study))
fisher(base$one.sided.p, side = 1, m = uniqueN(base$study))
fisher(base$one.sided.p, m = uniqueN(base$study)) # same, one-sided per default
DECT <- sqldf("SELECT * FROM df WHERE EMF_source = 'DECT'")
stouffer(DECT$one.sided.p, m = uniqueN(DECT$study))
fisher(DECT$one.sided.p, m = uniqueN(DECT$study))
helmholtz <- sqldf("SELECT * FROM df WHERE EMF_source = 'Coil system 50/60 Hz'")
stouffer(helmholtz$one.sided.p, m = uniqueN(helmholtz$study))
fisher(helmholtz$one.sided.p, m = uniqueN(helmholtz$study))
mobile <- sqldf("SELECT * FROM df WHERE EMF_source = 'Mobile phone'")
stouffer(mobile$one.sided.p, m = uniqueN(mobile$study))
fisher(mobile$one.sided.p, m = uniqueN(mobile$study))
power <- sqldf("SELECT * FROM df WHERE EMF_source = 'Power line'")
stouffer(power$one.sided.p, m = uniqueN(power$study))
fisher(power$one.sided.p, m = uniqueN(power$study))
siggen <- sqldf("SELECT * FROM df WHERE EMF_source = 'RF signal generator'")
fisher(siggen$one.sided.p, m = uniqueN(siggen$study))
fisher(siggen$one.sided.p, m = uniqueN(siggen$study))
count <- sqldf("SELECT * FROM HF WHERE E_Field <= 41")
count <- sqldf("SELECT * FROM HF WHERE E_Field <= 6")
View(count)
drosophila <- sqldf("SELECT * FROM count WHERE Insect_type = 'Drosophila'")
stouffer(drosophila$one.sided.p, m = uniqueN(drosophila$study))
fisher(drosophila$one.sided.p, m = uniqueN(drosophila$study))
bees <- sqldf("SELECT * FROM count WHERE Insect_type = 'Honeybee'")
stouffer(bees$one.sided.p, m = uniqueN(bees$study))
fisher(bees$one.sided.p, m = uniqueN(bees$study))
# apply Fisher's method for pooling the p-values
#?fisher
?stouffer
?metacont
cor_matrix <- cor(df)
?corr
?metacor
names(df)
# for those studies that provided means and SD, or just as figures where data points could be manually extracted from with a graph digitizer
df <- openxlsx::read.xlsx("HF_means_sd.xlsx", sheet = 1, na.strings = "NA")
#?metacont # deriving log ratio of means and log standard error from means + SD
meta_df <- metacont(n_e, mean_e, sdv_e, n_c, mean_c, sdv_c,
data = df, studlab = paste(key), sm = "ROM")
View(meta_df)
# apply Fisher's method for pooling the p-values
?fisher
base_r <- model.matrix(~ base$study, data = base)
base_r
uniqueN(base$study)
fisher(base$one.sided.p, side = 1, R = base_r)
str(base_r)
View(base_r)
base_r <- model.matrix(~ 1 + base$study, data = base)
str(base_r)
View(base_r)
base_r <- model.matrix(~ -1 + base$study, data = base)
View(base_r)
# apply Fisher's method for pooling the p-values
?fisher
names(df)
df <- openxlsx::read.xlsx("tables/HFLF_meta_table.xlsx", sheet = 1, na.strings = "NA")
names(df)
cor_matrix <- cor(df(c("log_ROM")))
df(c("log_ROM"))
df(c("log_ROM","log_SE"))
df[c("log_ROM","log_SE")]
cor_matrix <- cor(df[c("log_ROM")])
cor_matrix
?hetcor
?hetcorr
library(polycor)
# package sqldf requires external code to install, starting from pkgbuild
install.packages('polycor')
cor_matrix <- hetcor(df[c("log_ROM","stuy")])
cor_matrix <- hetcor(df[c("log_ROM","study")])
library(poly)
library(polycor)
cor_matrix <- hetcor(df[c("log_ROM","study")])
cor_matrix
df <- openxlsx::read.xlsx("tables/HFLF_meta_table.xlsx", sheet = 1, na.strings = "NA")
cor_matrix <- hetcor(df[c("log_ROM","study")])
cor_matrix
View(cor_matrix)
cor_matrix <- hetcor(base[c("log_ROM","study")])
cor_matrix
cor_matrix <- hetcor(base[c("log_ROM","p","study")])
cor_matrix
fisher(base$one.sided.p, side = 1, R = cor_matrix)
cor_matrix <- hetcor(base[c("log_ROM","p")])
cor_matrix
fisher(base$one.sided.p, side = 1, R = cor_matrix)
